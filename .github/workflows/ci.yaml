on:
  push:
    branches:
      - main
  pull_request:
name: ci
permissions:
  contents: read
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v2
        with:
          node-version: 24
      - run: npm ci
      - run: npm test
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v2
        with:
          node-version: 24
      - run: npm ci
      - run: npm run lint
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v2
        with:
          node-version: 24
      - run: npm ci
      - run: npm audit
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v2
        with:
          node-version: 24
      - run: npm ci
      - run: npm run check
  e2e:
    if: |
      github.ref == 'refs/heads/main' ||
      (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v2
        with:
          node-version: 24
      - run: npm ci
      - run: npm run e2e
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
  release-test:
    if: |
      github.ref == 'refs/heads/main' ||
      (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
    runs-on: ubuntu-latest
    environment: test
    needs: [test, lint, e2e, build, audit]
    outputs:
      preview_url: ${{ steps.set-url.outputs.preview_url }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v2
        with:
          node-version: 24
      - run: npm ci
      - name: Deploy to Cloudflare (PR preview or test env)
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            WORKER_NAME="discord-worker-pr-${{ github.event.number }}"
            echo "Using preview worker: $WORKER_NAME"
            npm run publish:test -- --name "$WORKER_NAME"
            echo "WORKER_NAME=$WORKER_NAME" >> $GITHUB_ENV
          else
            npm run publish:test
            echo "WORKER_NAME=discord-worker-test" >> $GITHUB_ENV
          fi
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
      - id: set-url
        name: Set preview URL output
        run: |
          echo "preview_url=https://${WORKER_NAME}.orry.workers.dev" >> "$GITHUB_OUTPUT"
  smoke-test:
    if: |
      github.ref == 'refs/heads/main' ||
      (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
    runs-on: ubuntu-latest
    environment: test
    needs: [release-test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v2
        with:
          node-version: 24
      - run: npm ci
      - run: npm run smoke
        env:
          SIGNATURE_PRIVATE_KEY: ${{ secrets.SIGNATURE_PRIVATE_KEY }}
          LIVE_BASE_URL: ${{ needs.release-test.outputs.preview_url }}
  release:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: prod
    needs: [smoke-test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v2
        with:
          node-version: 24
      - run: npm ci
      - run: npm run publish:prod
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
      - run: npm run deploy_commands
        env:
          DISCORD_APPLICATION_ID: ${{ secrets.DISCORD_APPLICATION_ID }}
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
